// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  image         String?
  hashedPassword  String?
  accounts      Account[]
  sessions      Session[]
  // profile    Profile[]
}

model VerificationToken {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Job{
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  jobName String
  jobLogo String?
  description String
  priceRange String
  domain String 
  jobType String[]
}

// model Profile{
//   id  String  @id @default(auto()) @map("_id") @db.ObjectId
//   auhtorEmail String
//   user  User  @relation(fields: [auhtorEmail], references: [email] ,onDelete: Cascade)
//   username String?
//   profileImage String?
//   bio String?
//   location String?
//   gender String?
//   dob DateTime?
//   phone String? 
//   skillIds String[]
// }

// model Skill {
//   id  String  @id @default(auto()) @map("_id") @db.ObjectId
//   label String
// }

model Category{
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  label String
  catSlug String
}

